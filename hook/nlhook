#!/usr/bin/ash

IP=192.168.10.11

clean_up() {
    echo "Cleaning up..."
    rm -rf /mnt/NonLinux
    rm -rf /mnt/update 
    rm -rf /mnt/usb
    echo "Cleaning up finished."   
}

set_up() {
    mkdir -p /mnt/NonLinux
    mount /dev/sda2 /mnt/NonLinux

    mkdir -p /mnt/update
    mount /dev/sda3 /mnt/update

    mkdir -p /mnt/usb
}

try_update_from_network() {
    echo "Trying update from network..."
    
    if wget ${IP}/update.tar --timeout=1 -O /mnt/update/update.tar; then 
        if try_copy_rootfs; then
            echo "Trying update from network finished successfully."        
            return 0
        fi
    fi
    
    echo "Trying update from network finished without success."
    return 1
}

try_update_from_usb() {
    echo "Trying update from usb..."

    devices=`blkid -o list | grep "(not mounted)" | grep -o "^[^ ]*"`
    for device in ${devices}; do
    	if mount_and_try_applying_update ${device}; then
            return 0
        fi
    done

    return 1
}

mount_and_try_applying_update() {
    echo "Trying mount and update from usb $1..."
    
    if mount $1 /mnt/usb; then
    	if [ -f /mnt/usb/update.tar ]; then
	        echo "Found update file"
	        cp /mnt/usb/update.tar /mnt/update/update.tar
	        if try_apply_update; then 
                echo "Applied USB update successfully."
                umount -f /mnt/usb
                return 0
	        fi
	    fi
	    umount -f /mnt/usb
    fi

    echo "Trying mount and update from usb finished."
    return 1
}

try_apply_update() {
    echo "Trying apply update..."
    if [ -f /mnt/update/update.tar ]; then
        if tar -C /mnt/update -xf /mnt/update/update.tar; then
            if try_copy_rootfs; then
                echo "Trying apply update finished successfully."
                return 0
            fi
        fi
    fi

    # BACKDOOR missing
    echo "Trying apply update without success."
    return 1
}

try_copy_rootfs() {
    echo "Trying copy rootfs..."
    
    if [ -f /mnt/update/update/NonLinux.tar.gz ]; then
        echo "Source update tar found."
        checksum=`sha256sum /mnt/update/update/NonLinux.tar.gz | cut -d " " -f 1`
        checksumFile=/mnt/update/update/${checksum}.sign

        if [ -f ${checksumFile} ]; then
            echo "Checksum verified."

            mkdir -p /mnt/update/update/NonLinux

            if tar -C /mnt/update/update/NonLinux -xzf /mnt/update/update/NonLinux.tar.gz; then
                echo "Update tar successfully unpacked."
                if rsync -v -a --delete --links /mnt/update/update/NonLinux/NonLinux/ /mnt/NonLinux; then
                    echo "Copied rootfs successfully."
                    return 0
                fi
            fi
        fi
    fi

    echo "Trying copy rootfs without success."
	return 1;
}

run_hook() {
    echo "Running hook..."

    clean_up
    set_up

    if try_update_from_network; then
        echo "Network update applied successfully!"
        return 0
	elif try_update_from_usb; then 
        echo "USB update applied successfully!"
        return 0
    fi

    echo "Running hook finished without success."
    return 1
} 
